# 8ea1aa0ac8d3be443ffec3d0f087401d50b1423ee66e64a9af38a724207a52d4 Elan 1.2.1 guest default_profile valid

function binarySearch(list as List<of String>, item as String) returns Boolean
  variable result set to false
  if list.length() > 0 then
    let mid be list.length() div 2
    let value be list[mid]
    if item is value then
      set result to true
    else if item.isBefore(value) then
      set result to binarySearch(list[..mid], item)
    else
      set result to binarySearch(list[mid + 1..], item)
    end if
  end if
  return result
end function

test 
  let li1 be ["lemon", "lime", "orange"]
  assert binarySearch(li1, "lemon") is true
  assert binarySearch(li1, "lime") is true
  assert binarySearch(li1, "orange") is true
  assert binarySearch(li1, "pear") is false
  let li2 be ["lemon", "orange"]
  assert binarySearch(li2, "lemon") is true
  assert binarySearch(li2, "orange") is true
  assert binarySearch(li2, "pear") is false
  let li3 be ["lemon"]
  assert binarySearch(li3, "lemon") is true
  assert binarySearch(li3, "lime") is false
  let li4 be empty List<of String>
  assert binarySearch(li4, "pear") is false
end test

constant example set to {"apple", "avocado", "banana", "blueberry", "cherry", "fig", "grape", "kiwi", "lemon", "lychee", "mango", "orange", "papaya", "peach", "pear", "pineapple", "plum", "raspberry", "strawberry", "watermelon"}
