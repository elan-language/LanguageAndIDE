# bd155f1d122821207360dac28306d10342dd8a29041a9e9e23e9b30aec7a6db0 Elan 1.2.0 guest default_profile valid

main
  let sequence be new List<of Int>()
  variable ok set to true
  variable interval set to 1000
  while ok
    call simonsTurn(sequence, interval)
    call clearVectorGraphics()
    call playersTurn(sequence, interval, ok)
    set interval to interval - 25
  end while
  print "Your score: {sequence.length() - 1}"
end main

procedure simonsTurn(sequence as List<of Int>, interval as Int)
  call sequence.append(randomInt(1, 4))
  each move in sequence
    call displayMove(move, interval)
  end each
end procedure

procedure displayMove(move as Int, interval as Int)
  call clearVectorGraphics()
  let circle be new CircleVG() with centreX set to 20*move - 5, centreY set to 15, radius set to 10, fillColour set to colours[move - 1], strokeWidth set to 0
  call displayVectorGraphics([circle])
  call tone(interval, tones[move - 1].floor(), 0.1)
  call clearVectorGraphics()
  call pause(100)
end procedure

procedure playersTurn(sequence as List<of Int>, interval as Int, out ok as Boolean)
  variable counter set to 0
  while ok and (counter < sequence.length())
    let k be waitForKey()
    let valid, digit be parseAsInt(k)
    if valid and (sequence[counter] is digit) then
      set counter to counter + 1
      call displayMove(digit, interval)
    else
      set ok to false
    end if
  end while
  call pause(1000)
  call clearVectorGraphics()
  call pause(2000)
end procedure

constant colours set to {red, yellow, blue, green}

constant tones set to {164.81, 220, 277.18, 329.63}
