# 016a50d84237eaa739e0162a6837fa57f8fda7023c824bc51fe1e14ede2150ae Elan 1.2.2 guest default_profile valid

main
  let fruit be ["apple", "avocado", "banana", "blueberry", "cherry", "fig", "grape", "kiwi", "lemon", "lychee", "mango", "orange", "papaya", "peach", "pear", "pineapple", "plum", "raspberry", "strawberry", "watermelon"]
  variable exit set to false
  repeat
    let wanted be inputString("What type of fruit do you want ('x' to exit)? ")
    if wanted is "x" then
      set exit to true
    else
      let result be binarySearch(fruit, wanted)
      if result then
        print "We can supply a {wanted}"
      else
        print "Sorry, we cannot supply a {wanted}"
      end if
    end if
  end repeat when exit
end main

function binarySearch(li as List<of String>, item as String) returns Boolean
  variable result set to false
  if li.length() > 0 then
    let mid be li.length() div 2
    let value be li[mid]
    if item is value then
      set result to true
    else if item.isBefore(value) then
      set result to binarySearch(li[..mid], item)
    else
      set result to binarySearch(li[mid + 1..], item)
    end if
  end if
  return result
end function

test 
  let li1 be ["lemon", "lime", "orange"]
  assert binarySearch(li1, "lemon") is true
  assert binarySearch(li1, "lime") is true
  assert binarySearch(li1, "orange") is true
  assert binarySearch(li1, "pear") is false
  let li2 be ["lemon", "orange"]
  assert binarySearch(li2, "lemon") is true
  assert binarySearch(li2, "orange") is true
  assert binarySearch(li2, "pear") is false
  let li3 be ["lemon"]
  assert binarySearch(li3, "lemon") is true
  assert binarySearch(li3, "lime") is false
  let li4 be empty List<of String>
  assert binarySearch(li4, "pear") is false
end test
