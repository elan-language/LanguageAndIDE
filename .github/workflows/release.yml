# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Release 

permissions:
  contents: read
  actions: read
  packages: read

on:
  workflow_dispatch:
    inputs:
      dryRun:
        type: boolean
        default: true
    
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run production-compile --if-present
    - run: npm run test
    - name: Read build version
      id: read_file
      uses: jaywcjlove/github-action-read-file@v2.0.0
      with:
        path: src/ide/build-version.txt
    - name: dbg
      run: echo "${{ steps.read_file.outputs.content }}"
    - name: zip archive
      uses: vimtor/action-zip@v1.2
      with:
        files: out/website/
        recursive: true
        dest: Elan_v${{ steps.read_file.outputs.content }}.zip
    - name: artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-zip
        path: ${{ github.workspace }}/Elan_v${{ steps.read_file.outputs.content }}.zip
    - name: Push web-site
      uses: Dylan700/sftp-upload-action@latest
      with:
        server: ${{ secrets.ftp_server }}
        username: ${{ secrets.ftp_user }}
        password: ${{ secrets.ftp_password }}
        uploads: ./out/website/ => ./
        dry-run: ${{ inputs.dryRun }}
    - name: Push archive
      uses: Dylan700/sftp-upload-action@latest
      with:
        server: ${{ secrets.ftp_server }}
        username: ${{ secrets.ftp_user }}
        password: ${{ secrets.ftp_password }}
        uploads: ${{ github.workspace }}/ => ./versions/
        ignore: |
          !Elan_v${{ steps.read_file.outputs.content }}.zip
        dry-run: ${{ inputs.dryRun }}
        
