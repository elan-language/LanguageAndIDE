{
  "name": "elan",
  "displayName": "Elan",
  "description": "Elan language editor and compiler",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "https://github.com/elan-language/IDE.git"
  },
  "license": "Apache-2.0",
  "icon": "images/icon.png",
  "categories": [
    "Programming Languages",
    "Education"
  ],
  "scripts": {
    "update-worksheets": "node ./out/src/build-scripts/update-worksheet-files.js",
    "update-build-script": "node ./out/src/build-scripts/update-build-files.js",
    "update-elan-files-script": "node ./out/src/build-scripts/update-elan-files.js",
    "copy-web-files": "cpr ./src/web-content ./out/website -o && cpr ./src/styles ./out/website/styles -o",
    "copy-static-files": "npm run copy-web-files && npm run update-elan-files-script && npm run update-worksheets && cpr ./src/demo_programs ./out/website/demo -o && cpr ./src/documentation ./out/website/documentation -f .*\\.pptx  -o",
    "build-website": "npm run copy-static-files && npm run compile-web",
    "compile-test-api": "esbuild ./src/standard-library/std-lib.ts --bundle --format=esm --outfile=out/test/elan-api.js",
    "compile-web": "esbuild ./out/src/web/web-scripts.js --bundle --outfile=out/website/web-scripts.js && esbuild ./src/standard-library/std-lib.ts --bundle --format=esm --outfile=out/website/elan-api.js && esbuild ./src/web/standalone.ts --bundle --outfile=out/website/standalone.js && esbuild ./src/web/worksheet-scripts.ts --bundle --outfile=out/website/worksheet-scripts.js",
    "compile-test": "tsc -p ./test && npm run format-test",
    "compile-src": "tsc -p ./",
    "compile-base": "npm run compile-src && npm run format-src && npm run lint",
    "dev-compile": "cpr ./src/environments/environment.ts ./src/environment.ts -o && npm run compile-base && npm run build-website",
    "production-compile": "cpr ./src/environments/environment.prod.ts ./src/environment.ts -o && npm run compile-base && npm run update-build-script && npm run build-website",
    "pretest": "npm run compile-src && npm run compile-test && npm run compile-test-api && cpr ./test/files ./out/test/files -o",
    "lint": "eslint src",
    "test": "npm run pretest && mocha --timeout 10000 out/test/**/*.test.js",
    "test-coverage": "npm run pretest && nyc --reporter=lcov mocha out/test/**/*.test.js",
    "format-src": "prettier --ignore-path .gitignore --print-width 100 --log-level silent --end-of-line auto --write \"src/**/*.ts\"",
    "format-test": "prettier --ignore-path .gitignore --print-width 100 --log-level silent --end-of-line auto --write \"test/**/*.test.ts\"",
    "update-elan": "npm run compile-src && npm run compile-test && npm run update-elan-files-script"
  },
  "dependencies": {
    "@types/wicg-file-system-access": "^2023.10.5",
    "async-file": "2.0.2",
    "reflect-metadata": "^0.2.2"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.26.0",
    "@playwright/test": "^1.52.0",
    "@types/jsdom": "^21.1.7",
    "@types/mocha": "^10.0.6",
    "@types/node": "22.x",
    "@typescript-eslint/eslint-plugin": "^8.32.0",
    "@typescript-eslint/parser": "^8.32.0",
    "cpr": "~3.0.1",
    "esbuild": "^0.25.0",
    "eslint": "^9.26.0",
    "jsdom": "^25.0.0",
    "mocha": "^11.0.0",
    "nyc": "^17.1.0",
    "playwright": "^1.52.0",
    "prettier": "^3.5.3",
    "source-map-support": "^0.5.21",
    "typescript": "^5.8.3",
    "web-worker": "^1.5.0"
  }
}
